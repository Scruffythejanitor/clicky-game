{"ast":null,"code":"var _jsxFileName = \"/Users/Andrew/Documents/GitHub/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport CardDisplay from \"./components/card-display\";\nimport info from \"./card-info.json\"; // import Header from \"./components/Header\";\n// import Footer from \"./components/Footer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickHandle = id => {\n      console.log(\"clicked\", id);\n      let newInfo = this.state.info.map(info => {\n        if (info.id === id) {\n          if (info.clicked === false) {\n            this.updateScore();\n\n            if (this.state.score >= this.state.highScore) {\n              this.updateHighScore();\n\n              if (this.state.highScore === this.state.info.length) {\n                this.winGame();\n              }\n            }\n\n            info.clicked = true;\n          } else {\n            this.restartGame();\n          }\n        }\n\n        return info;\n      });\n      this.shuffleCards(newInfo);\n      console.log(newInfo);\n      this.setState({\n        info: newInfo\n      });\n    };\n\n    this.shuffleCards = newInfo => {\n      newInfo.sort(() => Math.random() - 0.5);\n    };\n\n    this.updateScore = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.updateHighScore = () => {\n      this.setState({\n        highScore: this.state.highScore + 1\n      });\n    };\n\n    this.winGame = () => {\n      alert(\"You've won\");\n      this.setState({\n        highScore: 0\n      });\n      this.restartGame();\n    };\n\n    this.restartGame = () => {\n      this.setState({\n        score: 0\n      });\n      let resetInfo = this.state.info.map(info => {\n        info.clicked = false;\n        return info;\n      });\n      this.setState({\n        info: resetInfo\n      });\n    };\n\n    this.state = {\n      score: 0,\n      info,\n      highScore: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardDisplay, {\n      info: this.state.info,\n      onClick: this.clickHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Andrew/Documents/GitHub/clicky-game/src/App.js"],"names":["React","Component","CardDisplay","info","App","constructor","props","clickHandle","id","console","log","newInfo","state","map","clicked","updateScore","score","highScore","updateHighScore","length","winGame","restartGame","shuffleCards","setState","sort","Math","random","alert","resetInfo","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CardDisplay from \"./components/card-display\";\nimport info from \"./card-info.json\";\n// import Header from \"./components/Header\";\n// import Footer from \"./components/Footer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      info,\n      highScore: 0,\n    };\n  }\n  clickHandle = (id) => {\n    console.log(\"clicked\", id);\n    let newInfo = this.state.info.map((info) => {\n      if (info.id === id) {\n        if (info.clicked === false) {\n          this.updateScore();\n          if (this.state.score >= this.state.highScore) {\n            this.updateHighScore();\n            if (this.state.highScore === this.state.info.length) {\n              this.winGame();\n            }\n          }\n          info.clicked = true;\n        } else {\n          this.restartGame();\n        }\n      }\n      return info;\n    });\n    this.shuffleCards(newInfo);\n    console.log(newInfo);\n    this.setState({ info: newInfo });\n  };\n\n  shuffleCards = (newInfo) => {\n    newInfo.sort(() => Math.random() - 0.5);\n  };\n\n  updateScore = () => {\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  updateHighScore = () => {\n    this.setState({ highScore: this.state.highScore + 1 });\n  };\n\n  winGame = () => {\n    alert(\"You've won\");\n    this.setState({ highScore: 0 });\n    this.restartGame();\n  };\n  restartGame = () => {\n    this.setState({ score: 0 });\n    let resetInfo = this.state.info.map((info) => {\n      info.clicked = false;\n      return info;\n    });\n    this.setState({ info: resetInfo });\n  };\n  render() {\n    return (\n      <div>\n        <Header score={this.state.score} highScore={this.state.highScore} />\n\n        <CardDisplay info={this.state.info} onClick={this.clickHandle} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}